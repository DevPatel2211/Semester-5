#include <stdio.h>
//array where each element is pointer to a string
char *keywords[] = {
    "int", "return", "if", "else", "while", "for", "break", "continue",
    "void", "char", "float", "double", "static", "struct", "union", "enum",
    "typedef", "const", "sizeof", "volatile", "register", "extern", "signed",
    "unsigned", "goto", "default", "case", "switch", "do", "short", "long",
    "auto"
};
int num_keywords = sizeof(keywords) / sizeof(keywords[0]);

char *operators[] = {
    "+", "-", "*", "/", "%", "++", "--", "==", "!=", ">", "<", ">=", "<=", 
    "&&", "||", "!", "&", "|", "^", "~", "<<", ">>", "=", "+=", "-=", "*=", 
    "/=", "%=", "&=", "|=", "^=", "<<=", ">>=", "?", ":", ".", "->", ","
};
int num_operators = sizeof(operators) / sizeof(operators[0]);

int my_strcmp(const char *str1, const char *str2) {
    while (*str1 && (*str1 == *str2)) {
        str1++;
        str2++;
    }
    return *(unsigned char *)str1 - *(unsigned char *)str2;
}

int my_isalpha(char c) {
    return (c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z');
}

int my_isalnum(char c) {
    return my_isalpha(c) || (c >= '0' && c <= '9');
}

int keyword(const char *str) {
    for (int i = 0; i < num_keywords; i++) {
        if (my_strcmp(str, keywords[i]) == 0) {
            return 1;
        }
    }
    return 0;
}

int op(const char *str) {
    for (int i = 0; i < num_operators; i++) {
        if (my_strcmp(str, operators[i]) == 0) {
            return 1;
        }
    }
    return 0;
}

int identifier(const char *str) {
    if (my_isalpha(str[0]) || str[0] == '_') {
        for (int i = 1; str[i]; i++) {
            if (!my_isalnum(str[i]) && str[i] != '_') {
                return 0;
            }
        }
        return 1;
    }
    return 0;
}

int main() {
    FILE *file = fopen("demo.txt", "r");
    if (file == NULL) {
        printf("Could not open file.\n");
        return 1;
    }

    char word[100];
    int num_keywords = 0, num_operators = 0, num_identifiers = 0, others = 0, total = 0;

    while (fscanf(file, "%s", word) != EOF) {
        if (keyword(word)) {
            num_keywords++;
        } else if (op(word)) {
            num_operators++;
        } else if (identifier(word)) {
            num_identifiers++;
        } else {
            others++;
        }
        total++;
    }

    fclose(file);

    printf("Number of keywords: %d\n", num_keywords);
    printf("Number of operators: %d\n", num_operators);
    printf("Number of identifiers: %d\n", num_identifiers);
    printf("Number of others: %d\n", others);
    printf("Number of tokens: %d\n", total);
    return 0;
}